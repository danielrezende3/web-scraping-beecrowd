a="# Problem 1028\n\nDescriÃ§Ã£o\n----------\n\n![](https://resources.beecrowd.com/gallery/images/problems/UOJ_1028.jpg)\n\nRichard and Vicent are crazy about football collectable cards. In their spare time, they arrange a way of playing some game involving such cards. Both also have the habit of exchanging the repeated cards with their friends, and one day they thought about a different game. They called all their friends and proposed the following: with the cards in hand, each one tried to make an exchange with his closest friend following this simple rule: each one must count how many cards he owned. After this, they had to split these cards into stacks, all of it with the same size, as large as it was possible for both players. Then, each one choose one of the friend's card stacks to receive. For example, if Richard and Vincent would change the cards with respectively 8 and 12 cards each, both must put his cards in stacks of four cards (Richard would have two stacks and Vincent had three stacks), and both choose a stack from his friend to receive it.\n\nInput\n-----\n\nThe first input line contains a single integer **N** (1 Ã¢Â‰Â¤ **N** Ã¢Â‰Â¤ 3000), indicating the number of test cases. Each test case contains two integer numbers **F1** (1 Ã¢Â‰Â¤ **F1** Ã¢Â‰Â¤ 1000) and **F2** (1 Ã¢Â‰Â¤ **F2** Ã¢Â‰Â¤ 1000)Â\xa0 indicating, respectly, the among of collectable cards that Richard and Vicent have to change.\n\nOutput\n------\n\nFor each test case there will be an integer number at the output, representing the maximum size of the stack of cards which can be exchanged between two players.\n\n\n| Input Sample | Output Sample |\n| --- | --- |\n| 3 8 12 9 27 259 111 | 4 9 37 |\n\n\n# Problem 1093\n\nDescriÃ§Ã£o\n----------\n\nFelipinho is thrilled with his new RPG game, about wars between clans of vampires. In this game he plays a vampire that repeatedly comes into combat against vampires from other clans. Such battles are won or lost based on some characteristics of the opponents, with the help of a standard six-faced dice. For simplicity, we will consider only the fight between two vampires, Vampire 1 and Vampire 2. Each vampire has a vital energy (denoted respectively by *EV1* and *EV2*). Besides, an attack force *AT* and a damage capacity *D* are also given.\n\nThe combat is fought in turns, in the following way. At each turn, the dice is rolled; if the result value is less than or equal to ***AT***, Vampire 1 wins the turn, otherwise Vampire 2 wins. The winner then sucks the value ***D*** from the loser\\'s vital energy. That is, ***D*** points are subtracted from the loser's vital energy and added to the winner's vital energy. The combat continues until one of the fighters has ***EV*** less than or equal to zero.\n\nFor example, suppose\n***EV1**=7*,***EV2**=5*, ***AT**=2* and***D**=4*. The dice is rolled and the result value is *3*. Then, Vampire 2 wins the turn, and therefore *4* points are subtracted from\n***EV1*** and added to\n***EV2***. The new values for the vital energies would be\n***EV1**=3*\nand\n***EV2**=9*. Notice that, if in the next turn Vampire 2 wins again, the combat ends. The values of ***AT*** and ***D*** are constant throughout the combat; only\n***EV1*** and\n***EV2*** vary.\n\nDespite loving the game, Felipinho thinks that the combats are too long, and suspects that, given the initial values of\n***EV1***,\n***EV2***, ***AT*** and ***D***, it is possible to determine the probability of one of the players winning the combat, and that could help shorten the combat time. Felipinho has asked your help to verify his suspicion.\n\nInput\n-----\n\nThe input contains several test cases. Each test case is given in one single line, containing four integers\n***EV1***,\n***EV2***, ***AT*** and ***D*** separated by spaces (*1 Ã¢Â‰Â¤ **EV1**, **EV2** Ã¢Â‰Â¤ 10*, *1 Ã¢Â‰Â¤ **AT** Ã¢Â‰Â¤ 5* and *1 Ã¢Â‰Â¤ **D** Ã¢Â‰Â¤ 10*). The end of input is indicated by one line containing only four zeros, separated by spaces.\n\nOutput\n------\n\nFor each test case in the input, your program must print a single line. The line must contain a real number representing, in terms of percentages, the probability that Vampire 1 wins the combat. The result must be printed as a real number with exactly one decimal figure.\n\n\n| Input Sample | Output Sample |\n| --- | --- |\n| 1 1 3 1 1 2 1 1 8 5 3 1 7 5 2 4 0 0 0 0 | 50.0 3.2 61.5 20.0 |\n\nMaratona de ProgramaÃƒÂ§ÃƒÂ£o da SBC 2008.\n\n\n"
print(a)